version: '3.8'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "9091:9090"
    environment:
      - PORT=5000
    networks:
      - app_network
    # volumes:
    #   - ./backend:/app

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app_network
    environment:
      - REACT_APP_BACKEND_URL=http://backend:5000
    # volumes:
    #   - ./frontend:/app

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./monitoring/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./monitoring/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - app_network
    depends_on:
      - prometheus

networks:
  app_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: